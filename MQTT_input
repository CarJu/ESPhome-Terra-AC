substitutions:
  name: esphome-web-c24bff
  friendly_name: ABBtac11

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:


# Allow Over-The-Air updates
ota:
  platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp8266.yaml@main
  import_full_config: true

# To have a "next url" for improv serial
web_server:

mqtt:
  broker: "192.168.1.62"
  topic_prefix: "tac11/carport"

uart:
  id: mod_uart
  tx_pin: D2
  rx_pin: D1
  baud_rate: 9600
  stop_bits: 1
      
modbus:
  send_wait_time: 500ms
  uart_id: mod_uart
  id: mod_bus

modbus_controller:
  - id: TAC11
    modbus_id: mod_bus
    address: 1
    setup_priority: -10
    update_interval: 10s


sensor:

  - platform: modbus_controller
    modbus_controller_id: TAC11  
    id: energy_delivered
    name: "energy_delivered"
    address: 16415
    unit_of_measurement: "Wh"
    register_type: holding
    #value_type: U_WORD
    #skip_updates: 0
    accuracy_decimals: 0    

  - platform: modbus_controller
    modbus_controller_id: TAC11  
    id: error_code
    name: "error code"
    address: 16393
    register_type: holding
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: TAC11  
    id: power
    name: "power"
    address: 16413
    unit_of_measurement: "W"
    register_type: holding
    accuracy_decimals: 0    

  - platform: mqtt_subscribe
    name: "LadebeschrÃ¤nkung"
    id: max_power
    topic: tac11/carport/max_power
    on_value:
      then:
        - lambda: |-
            uint16_t payload = x/0.6875;
            ESP_LOGI("main", "set max current %d", payload);
            // Create a modbus command item with the max current value as the payload
            esphome::modbus_controller::ModbusCommandItem set_payload_command = esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(TAC11,16640,2,{0,payload});
            // Submit the command to the send queue
            TAC11->queue_command(set_payload_command);
